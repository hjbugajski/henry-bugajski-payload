/* tslint:disable */
/**
 * This file was automatically generated by Payload CMS.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface Config {}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "toolbar".
 */
export interface Toolbar {
  id: string;
  toolbarItems: {
    type: 'internal' | 'file' | 'external';
    newTab?: boolean;
    internal: string | Page;
    file: string | File;
    label: string;
    url: string;
    id?: string;
  }[];
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  name: string;
  slug: string;
  meta: {
    title: string;
    description: string;
  };
  layout: (
    | {
        contentFields: {
          content?: {
            [k: string]: unknown;
          }[];
        };
        id?: string;
        blockName?: string;
        blockType: 'content';
      }
    | {
        cardSectionFields: {
          title: string;
          cards: {
            title: string;
            color?: 'blue' | 'teal' | 'tomato' | 'plum' | 'violet';
            links: {
              type: 'internal' | 'file' | 'external';
              newTab?: boolean;
              internal: string | Page;
              file: string | File;
              label: string;
              url: string;
              id?: string;
            }[];
            tags: {
              value: string;
              id?: string;
            }[];
            body: {
              content: string;
              id?: string;
            }[];
            footer: string;
            id?: string;
          }[];
        };
        id?: string;
        blockName?: string;
        blockType: 'cardSection';
      }
  )[];
  _status?: 'draft' | 'published';
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "files".
 */
export interface File {
  id: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  firstName?: string;
  lastName?: string;
  roles: ('admin' | 'editor' | 'public')[];
  email?: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  loginAttempts?: number;
  lockUntil?: string;
  createdAt: string;
  updatedAt: string;
}
